# Total = 30

1. What is the id of the most recent order?
P: Find the id of the order made most recently.

SELECT order_id
FROM orders
ORDER BY date_order_placed DESC
LIMIT 1

S:
S:
S:


2. what are the order id and customer id of the oldest order?
P: Find the order id and customer id associated with the oldest order.

SELECT order_id, customer_id
FROM orders
ORDER BY date_order_placed
LIMIT 1

S:
S:
S:


3. Find the id of the order whose shipment tracking number is "3452".
P: Which order's shipment tracking number is "3452"? Give me the id of the order.

SELECT order_id
FROM shipments
WHERE shipment_tracking_number="3452"

S:
S:
S:


4. Find the ids of all the order items whose product id is 11.
P: Find all the order items whose product id is 11. What are the order item ids?

SELECT order_item_id
FROM order_items
WHERE product_id=11

S:
S:
S:


5. List the name of all the distinct customers who have orders with status "Packing".
P: Which customers have orders with status "Packing"? Give me the customer names.

SELECT distinct T1.customer_name
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T2.order_status="Packing"

S:
S:
S:


6. Find the details of all the distinct customers who have orders with status "On Road".
P: What are the distinct customers who have orders with status "On Road"? Give me the customer details?

SELECT distinct T1.customer_details
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T2.order_status="On Road"

S:
S:
S:


7. What is the name of the customer who has the most orders?
P: Which customer made the most orders? Find the customer name.

SELECT T1.customer_name
FROM customers as T1 JOIN orders as T2 ON T1.customer_id = T2.customer_id
GROUP BY T1.customer_id
ORDER BY count(*) DESC
LIMIT 1

S:
S:
S:


8. What is the customer id of the customer who has the most orders?
P: Find the id of the customer who made the most orders.

SELECT T1.customer_id
FROM customers as T1 JOIN orders as T2 ON T1.customer_id = T2.customer_id
GROUP BY T1.customer_id
ORDER BY count(*) DESC
LIMIT 1

S:
S:
S:


9. Give me a list of id and status of orders which belong to the customer named "Jeramie".
P: Which orders are made by the customer named "Jeramie"? Give me the order ids and status.

SELECT T2.order_id, T2.order_status
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T1.customer_name="Jeramie"

S:
S:
S:


10. Find the dates of orders which belong to the customer named "Jeramie".
P: What are the dates of the orders made by the customer named "Jeramie"?

SELECT T2.date_order_placed
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T1.customer_name="Jeramie"

S:
S:
S:


11. Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.
P: Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.

SELECT T1.customer_name
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T2.date_order_placed>=date("2009-01-01") and T2.date_order_placed<=date("2010-01-01")

S:
S:
S:


12. Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?
P: What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??

SELECT distinct T2.product_id
FROM orders as T1 JOIN order_items as T2 ON T1.order_id=T2.order_id
WHERE T1.date_order_placed>=date("1975-01-01") and T1.date_order_placed<=date("1976-01-01")

S:
S:
S:


13. Find the names of the customers who have order status both "On Road" and "Shipped".
P: Which customers have both "On Road" and "Shipped" as order status? List the customer names.

SELECT T1.customer_name
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T2.order_status="On Road"
INTERSECT
SELECT T1.customer_name
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T2.order_status="Shipped"

S:
S:
S:


14. Find the id of the customers who have order status both "On Road" and "Shipped".
P: Which customers have both "On Road" and "Shipped" as order status? List the customer ids.

SELECT T1.customer_id
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T2.order_status="On Road"
INTERSECT
SELECT T1.customer_id
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
WHERE T2.order_status="Shipped"

S:
S:
S:


15. When was the order placed whose shipment tracking number is 3452? Give me the date.
P: On which day was the order placed whose shipment tracking number is 3452?

SELECT T1.date_order_placed
FROM orders as T1 JOIN shipments as T2 ON T1.order_id=T2.order_id
WHERE T2.shipment_tracking_number=3452

S:
S:
S:


16. What is the placement date of the order whose invoice number is 10?
P: On what day was the order with invoice number 10 placed?

SELECT T1.date_order_placed
FROM orders as T1 JOIN shipments as T2 ON T1.order_id=T2.order_id
WHERE T2.invoice_number=10

S:
S:
S:


17. List the count and id of each product in all the orders.
P: For each product, return its id and the number of times it was ordered.

SELECT count(*), T3.product_id
FROM orders as T1 JOIN order_items as T2 JOIN products as T3 ON T1.order_id=T2.order_id and T2.product_id=T3.product_id
GROUP BY T3.product_id

S:
S:
S:


18. List the name and count of each product in all orders.
P: For each product, show its name and the number of times it was ordered.

SELECT T3.product_name, count(*)
FROM orders as T1 JOIN order_items as T2 JOIN products as T3 ON T1.order_id=T2.order_id and T2.product_id=T3.product_id
GROUP BY T3.product_id

S:
S:
S:


19. Find the ids of orders which are shipped after 2000-01-01.
P: Which orders have shipment after 2000-01-01? Give me the order ids.

SELECT order_id
FROM shipments
WHERE shipment_date>date("2000-01-01")

S:
S:
S:


20. Find the id of the order which is shipped most recently.
P: Which order has the most recent shipment? Give me the order id.

SELECT order_id
FROM shipments
WHERE shipment_date = (SELECT max(shipment_date) from shipments)

S:
S:
S:


21. List the names of all distinct products in alphabetical order.
P: Sort all the distinct products in alphabetical order.

SELECT distinct product_name
FROM products
ORDER BY product_name

S:
S:
S:


22. List the ids of all distinct orders ordered by placed date.
P: What are ids of the all distinct orders, sorted by placement date?

SELECT distinct order_id
FROM orders
ORDER BY date_order_placed

S:
S:
S:


23. What is the id of the order which has the most items?
P: Which order deals with the most items? Return the order id.

SELECT T1.order_id
FROM orders as T1 JOIN order_items as T2 ON T1.order_id=T2.order_id
GROUP BY T1.order_id
ORDER BY count(*) DESC
LIMIT 1

S:
S:
S:


24. What is the name of the customer who has the largest number of orders?
P: Find the name of the customer who made the most orders.

SELECT T1.customer_name
FROM customers as T1 JOIN orders as T2 ON T1.customer_id=T2.customer_id
GROUP BY T1.customer_id
ORDER BY count(*) DESC
LIMIT 1

S:
S:
S:


25. Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.
P: What are the invoice numbers created before 1989-09-03 or after 2007-12-25?

SELECT invoice_number
FROM invoices
WHERE invoice_date<date("1989-09-03") or invoice_date>date("2007-12-25")

S:
S:
S:


26. Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.
P: What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?

SELECT distinct invoice_details
FROM invoices
WHERE invoice_date<date("1989-09-03") or invoice_date>date("2007-12-25")

S:
S:
S:


27. For each customer who has at least two orders, find the customer name and number of orders made.
P: Which customers have made at least two orders? Give me each customer name and number of orders made.

SELECT T2.customer_name, count(*)
FROM orders as T1 JOIN customers as T2 ON T1.customer_id=T2.customer_id
GROUP BY T2.customer_id
having count(*) >= 2

S:
S:
S:


28. Find the name of the customers who have at most two orders.
P: What are the names of the customers who have made two or less orders?

SELECT T2.customer_name
FROM orders as T1 JOIN customers as T2 ON T1.customer_id=T2.customer_id
GROUP BY T2.customer_id
having count(*) <= 2

S:
S:
S:


29. List the names of the customers who have once bought product "food".
P: What are the names of the customers who bought product "food" at least once?

SELECT T1.customer_name
FROM customers as T1 JOIN orders as T2 JOIN order_items as T3 JOIN products as T4 ON T1.customer_id=T2.customer_id and T2.order_id=T3.order_id and T3.product_id=T4.product_id
GROUP BY T1.customer_id
HAVING count(T4.product_name="food") >= 1

S:
S:
S:


30. List the names of customers who have once canceled the purchase of the product "food" (the item status is "Cancel").
P: Which customers have ever canceled the purchase of the product "food" (the item status is "Cancel")?

SELECT T1.customer_name
FROM customers as T1 JOIN orders as T2 JOIN order_items as T3 JOIN products as T4 ON T1.customer_id=T2.customer_id and T2.order_id=T3.order_id and T3.product_id=T4.product_id
WHERE T3.order_item_status="Cancel"
GROUP BY T1.customer_id
HAVING count(T4.product_name="food") >= 1

S:
S:
S:


