Total # = 52

1. Give me the dates when the max temperature was higher than 85.
P: What are the dates with a maximum temperature higher than 85?

SELECT date
FROM weather
WHERE max_temperature_f > 85

S:
S:
S:

2. What are the names of stations that have latitude lower than 37.5?
P: What are the names of all stations with a latitude smaller than 37.5?

SELECT name
FROM station
WHERE lat < 37.5

S:
S:
S:



3. For each city, return the highest latitude among its stations.
P: For each city, what is the highest latitude for its stations?

SELECT city, max(lat)
FROM station
Group by city


S:
S:
S:


4. Give me the start station and end station for the trips with the three oldest id.
P: What is the station station and end station for the trips with the three smallest ids?

SELECT start_station_name, end_station_name
FROM trip
Order by id
LIMIT 3


S:
S:
S:



5. What is the average latitude and longitude of stations located in San Jose city?
P: What is the average latitude and longitude in San Jose?

SELECT avg(lat), avg(long)
FROM station
WHERE city = "San Jose"


S:
S:
S:

6. What is the id of the trip that has the shortest duration?
P: What is the id of the shortest trip?

SELECT id
FROM trip
order by duration
LIMIT 1


S:
S:
S:



7. What is the total and maximum duration of trips with bike id 636?
P: What is the total and maximum duration for all trips with the bike id 636?

SELECT sum(duration), max(duration)
FROM trip
WHERE bike_id = 636


S:
S:
S:


8. For each zip code, return the average mean temperature of August there.
P: For each zip code, what is the average mean temperature for all dates that start with '8'?

SELECT zip_code , avg(mean_temperature_f)
FROM weather
where date LIKE "8/%"
Group by zip_code



S:
S:
S:

9. From the trip record, find the number of unique bikes.
P: How many different bike ids are there?

SELECT count(DISTINCT bike_id)
FROM trip


S:
S:
S:


10. What is the number of distinct cities the stations are located at?
P: How many different cities have these stations?

SELECT count(DISTINCT city)
FROM station


S:
S:
S:


11. How many stations does Mountain View city has?
P: How many stations are in Mountain View?

SELECT COUNT(*)
FROM station
WHERE city = "Mountain View"


S:
S:
S:


12. Return the unique name for stations that have ever had 7 bikes available.
P: What are the different names for each station that has ever had 7 bikes available?

SELECT distinct T1.name
FROM station as T1 JOIN status as T2 ON T1.id = T2.station_id
WHERE T2.bikes_available = 7


S:
S:
S:


13. Which start station had the most trips starting from August? Give me the name and id of the station.
P: What are the start station's name and id for the one that had the most start trips in August?

SELECT start_station_name, start_station_id
FROM trip
WHERE start_date LIKE "8/%"
GROUP BY start_station_name
ORDER BY COUNT(*) DESC
LIMIT 1



S:
S:
S:


14. Which bike traveled the most often in zip code 94002?
P: What is the id of the bike that traveled the most in 94002?

SELECT bike_id
FROM trip
WHERE zip_code = 94002
GROUP BY bike_id
ORDER BY COUNT(*) DESC
LIMIT 1

S:
S:
S:



15. How many days had both mean humidity above 50 and mean visibility above 8?
P: What is the number of days that had an average humity above 50 and an average visibility above 8?

SELECT COUNT(*)
FROM weather 
Where mean_humidity > 50 and mean_visibility_miles > 8


S:
S:
S:



16. What is the latitude, longitude, city of the station from which the shortest trip started?
P:What is the latitude, longitude, and city of the station from which the trip with smallest duration started?

Select T1.lat, T1.long, T1.city
From station as T1 JOIN trip as T2 ON T1.id = T2.start_station_id
Order by T2.duration 
LIMIT 1


S:
S:
S:




17. What are the ids of stations that are located in San Francisco and have average bike availability above 10.
P: What are the ids of the stations in San Francisco that normally have more than 10 bikes available? 

SELECT id
FROM station
WHERE city = "San Francisco"
INTERSECT
SELECT station_id
FROM status
GROUP by station_id
having avg(bikes_available) > 10


S:
S:
S:


18. What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?
P: What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December? 

SELECT T1.name, T1.id
FROM station as T1 JOIN status as T2 ON T1.id = T2.station_id
GROUP by T2.station_id
having avg(T2.bikes_available) > 14
UNION
SELECT name, id
FROM station
WHERE installation_date LIKE "12/%"


S:
S:
S:

19. What is the 3 most common cloud cover rates in the region of zip code 94107?
P: What are the 3 most common cloud covers in the zip code of 94107?

SELECT cloud_cover
FROM weather
WHERE zip_code = 94107
GROUP BY cloud_cover 
ORDER BY COUNT (*) DESC
LIMIT 3


S:
S:
S:


20. What is the zip code in which the average mean sea level pressure is the lowest?
P: What is the zip code that has the lowest average mean sea level pressure?

SELECT zip_code
FROM weather
GROUP BY zip_code 
ORDER BY avg(mean_sea_level_pressure_inches)
LIMIT 1


S:
S:
S:



21.  What is the average bike availability in stations that are not located in Palo Alto?
P: What is the average bike availablility for stations not in Palo Alto?

SELECT avg(bikes_available)
FROM status
WHERE station_id NOT IN
(SELECT id
FROM station
WHERE city = "Palo Alto")


S:
S:
S:



22. What is the average longitude of stations that never had bike availability more than 10?
P: What is the mean longitude for all stations that have never had more than 10 bikes available?

SELECT avg(long)
FROM station
WHERE id NOT IN
(SELECT station_id
FROM status
GROUP by station_id
Having max(bikes_available) > 10)


S:
S:
S:



23. When and in what zip code did max temperature reach 80?
P: What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?

Select date, zip_code
From weather
Where max_temperature_f >= 80


S:
S:
S:



24. Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.
P: For each zip code, find the ids of all trips that have a higher average mean temperature above 60?

Select T1.id
From trip as T1 JOIN weather as T2 ON T1.zip_code = T2.zip_code
Group by T2.zip_code
having avg(T2.mean_temperature_f) > 60


S:
S:
S:




25. For each zip code, return how many times max wind speed reached 25?
P: For each zip code, how many times has the maximum wind speed reached 25 mph?

Select zip_code,count(*)
From weather 
Where max_wind_Speed_mph >= 25
Group by zip_code


S:
S:
S:



26. On which day and in which zip code was the min dew point lower than any day in zip code 94107?
P: Which days had a minimum dew point smaller than any day in zip code 94107, and in which zip codes were those measurements taken?

SELECT date, zip_code
FROM weather
WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)


S:
S:
S:



27. For each trip, return its ending station's installation date.
P: What is the installation date for each ending station on all the trips?


Select T1.id, T2.installation_date
From trip as T1 JOIN station as T2 ON T1.end_station_id = T2.id


S:
S:
S:



28. Which trip started from the station with the largest dock count? Give me the trip id.
P: What is the id of the trip that started from the station with the highest dock count?

Select T1.id
From trip as T1 JOIN station as T2 ON T1.start_station_id = T2.id
Order by T2.dock_count Desc
LIMIT 1


S:
S:
S:



28. Count the number of trips that did not end in San Francisco city.
P: How many trips did not end in San Francisco?

Select count(*)
From trip as T1 JOIN station as T2 ON T1.end_station_id = T2.id
Where T2.city != "San Francisco"


S:
S:
S:


29. In zip code 94107, on which day neither Fog nor Rain was not observed?
P: On which day has it neither been foggy nor rained in the zip code of 94107?

Select date
From weather
Where zip_code = 94107 and events != "Fog" and events != "Rain"


S:
S:
S:


30. What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?
P: What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available?

SELECT id
FROM station
WHERE lat > 37.4
EXCEPT
SELECT station_id
FROM status
GROUP by station_id
Having min(bikes_available) < 7


S:
S:
S:



31. What are names of stations that have average bike availability above 10 and are not located in San Jose city?
P: What are the names of all stations that have more than 10 bikes available and are not located in San Jose?

SELECT T1.name
FROM station as T1 JOIN status as T2 ON T1.id = T2.station_id
Group by T2.station_id
Having avg(bikes_available) > 10
EXCEPT
Select name
From station
WHERE city = "San Jose"


S:
S:
S:



32. What are the name, latitude, and city of the station with the lowest latitude?
P: What is the name, latitude, and city of the station that is located the furthest South?

SELECT name, lat, city
FROM station
ORDER BY lat
LIMIT 1


S:
S:
S:



33. What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?
P: What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?

SELECT date, mean_temperature_f, mean_humidity
FROM weather
ORDER BY max_gust_speed_mph DESC
LIMIT 3


S:
S:
S:



34. List the name and the number of stations for all the cities that have at least 15 stations.
P: What is the name of every city that has at least 15 stations and how many stations does it have?

SELECT city, COUNT(*)
FROM station
GROUP BY city
HAVING COUNT(*) >= 15


S:
S:
S:


35. Find the ids and names of stations from which at least 200 trips started.
P: What are the ids and names of all start stations that were the beginning of at least 200 trips?

SELECT start_station_id, start_station_name
FROM trip
GROUP BY start_station_name
HAVING COUNT(*) >= 200


S:
S:
S:



36. Find the zip code in which the average mean visibility is lower than 10.
P: For each zip code, select all those that have an average mean visiblity below 10. 

SELECT zip_code
FROM weather
GROUP BY zip_code
HAVING avg(mean_visibility_miles) < 10


S:
S:
S:


37. List all the cities in a decreasing order of each city's stations' highest latitude.
P: For each city, list their names in decreasing order by their highest station latitude. 

SELECT city
FROM station
GROUP BY city
Order by max(lat) DESC


S:
S:
S:



38. What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.
P: What are the dates that have the 5 highest cloud cover rates and what are the rates?

SELECT date, cloud_cover
FROM weather
ORDER BY cloud_cover DESC
LIMIT 5


S:
S:
S:


39. What are the ids and durations of the trips with the top 3 durations?
P: What are the ids of the trips that lasted the longest and how long did they last?

SELECT id, duration
FROM trip
ORDER BY duration DESC
LIMIT 3


S:
S:
S:



40. For each station, return its longitude and the average duration of trips that started from the station.
P: For each start station id, what is its name, longitude and average duration of trips started there?

Select T1.name, T1.long, avg(T2.duration)
From station as T1 JOIN trip as T2 ON T1.id = T2.start_station_id
Group by T2.start_station_id


S:
S:
S:



41. For each station, find its latitude and the minimum duration of trips that ended at the station.
P: For each end station id, what is its name, latitude, and minimum duration for trips ended there?

Select T1.name, T1.lat, min(T2.duration)
From station as T1 JOIN trip as T2 ON T1.id = T2.end_station_id
Group by T2.end_station_id 


S:
S:
S:



42. List all the distinct stations from which a trip of duration below 100 started.
P: What are all the different start station names for a trip that lasted less than 100?

Select distinct start_station_name
From trip
Where duration < 100


S:
S:
S:




43. Find all the zip codes in which the max dew point have never reached 70.
P: What are all the different zip codes that have a maximum dew point that was always below 70?


Select distinct zip_code
From weather
EXCEPT
Select distinct zip_code
From weather
Where max_dew_point_f >= 70

or

Select distinct zip_code
From weather
Group by zip_code
Having max(max_dew_point_f) < 70


S:
S:
S:




44. Find the id for the trips that lasted at least three times as long as the average duration of trips in zip code 94103.
P: What are the ids of all trips that had a duration three times as long as the average trip duration in the zip code 94103?

Select id
From trip
Where duration >= 3 * (Select avg(duration) From trip Where zip_code = 94103)

S:
S:
S:



45. What are the dates in which the mean sea level pressure was between 30.3 and 31?
P: What are the dates that have an average sea level pressure between 30.3 and 31?

Select date
From weather 
Where mean_sea_level_pressure_inches between 30.3 and 31 

S:
S:
S:


46. Find the day in which the difference between the max temperature and min temperature was the smallest. Also report the difference.
P: What are the days that had the smallest temperature range, and what was that range?

Select date, max_temperature_f - min_temperature_f 
From weather
Order by max_temperature_f - min_temperature_f 
LIMIT 1

S:
S:
S:


47. What are the id and name of the stations that have ever had more than 12 bikes available?
P: What are the different ids and names of the stations that have had more than 12 bikes available?

Select Distinct T1.id, T1.name
From station as T1 JOIN status as T2 ON T1.id = T2.station_id
Where T2.bikes_available > 12

S:
S:
S:




48. Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place.
P: What are the zip codes that have an average mean humidity below 70 and had at least 100 trips come through there?
Select zip_code
From weather
Group by zip_code
having avg(mean_humidity) < 70
INTERSECT
Select zip_code
From trip
Group by zip_code
having count(*) >= 100

S:
S:
S:



49. What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?
P: What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips
Select name
From station
Where city = "Palo Alto"
EXCEPT
Select end_station_name
From trip
Group by end_station_name
Having count(*) > 100


S:
S:
S:





50. How many trips started from Mountain View city and ended at Palo Alto city?
P: How many trips stated from  a station in Mountain View and ended at one in Palo Alto?

Select count(*)
From station as T1 JOIN trip as T2 JOIN station as T3 JOIN trip as T4 ON T1.id = T2.start_station_id and T2.id = T4.id and T3.id = T4.end_station_id
Where T1.city = "Mountain View" and T3.city = "Palo Alto"


S:
S:
S:





51. What is the average latitude and longitude of the starting points of all trips?
P: What is the average latitude and longitude of all starting stations for the trips?

Select avg(T1.lat), avg(T1.long)
From station as T1 JOIN trip as T2 ON T1.id = T2.start_station_id


S:
S:
S:



