
Total # = 42

1. How many friends does Dan have?
P: How many friends does Dan have?

S:
S:
S:

SELECT count(T2.friend)
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T1.name = 'Dan'

2. How many females does this network has?
P: How many females are in the network?

S:
S:
S:


SELECT count(*)
FROM Person
WHERE gender = 'female'

3. What is the average age for all person?
P: What is the average age for all people in the table?

S:
S:
S:


SELECT avg(age)
FROM Person

4. How many different cities are they from?
P: How many different cities do people originate from?

S:
S:
S:

SELECT count(distinct city)
FROM Person

5. How many type of jobs do they have?
P: How many different jobs are listed?

S:
S:
S:

SELECT count(distinct job)
FROM Person

6. Who is the oldest person?
P: What is the name of the person who is the oldest?

S:
S:
S:


SELECT name
FROM Person
WHERE age = (select max(age) from person)

7. Who is the oldest person whose job is student?
P: What is the name of the oldest student?

S:
S:
S:

SELECT name
FROM Person
WHERE job = 'student' and age = (select max(age) from person WHERE job = 'student' )

8. Who is the youngest male?
P: What is the name of the youngest male?

S:
S:
S:

SELECT name
FROM Person
WHERE gender = 'male' and age = (select min(age) from person WHERE gender = 'male' )

9. How old is the doctor named Zach?
P: What is the age of the doctor named Zach?

S:
S:
S:

SELECT age
FROM Person
WHERE job = 'doctor' and name = 'Zach'

10. Who is the person whose age is below 30?
P: What is the name of the person whose age is below 30?

S:
S:
S:

SELECT name
FROM Person
WHERE age < 30

11. How many people whose age is greater 30 and job is engineer?
P: HOw many engineers are older than 30?


S:
S:
S:

SELECT count(*)
FROM Person
WHERE age > 30 and job = 'engineer'

12. What is the average age for each gender?
P: How old is each gender, on average?

S:
S:
S:


SELECT avg(age), gender
FROM Person
GROUP BY gender

13. What is average age for different job title?
P: How old is the average person for each job?

S:
S:
S:

SELECT avg(age), job
FROM Person
GROUP BY job

14. What is average age of male for different job title?
P: What is the average age for a male in each job?

S:
S:
S:

SELECT avg(age), job
FROM Person
WHERE gender = 'male'
GROUP BY job

15. What is minimum age for different job title?
P: How old is the youngest person for each job?

S:
S:
S:

SELECT min(age), job
FROM Person
GROUP BY job

16. Find the number of people who is under 40 for each gender.
P: How many people are under 40 for each gender?

S:
S:
S:

SELECT count(*), gender
FROM Person
WHERE age < 40
GROUP BY gender

17. Find the name of people whose age is greater than any engineer sorted by their age.
P: What is the name of all the people who are older than at least one engineer? Order them by age. 


S:
S:
S:

SELECT name
FROM Person
WHERE age > (select min(age) from person where job = 'engineer')
ORDER BY age

18. Find the number of people whose age is greater than all engineers.
P: How many people are older than every engineer? 

S:
S:
S:

SELECT count(*)
FROM Person
WHERE age > (select max(age) from person where job = 'engineer')

19. list the name, job title of all people ordered by their names.
P: What are the names and job titles of every person ordered alphabetically by name? 

S:
S:
S:

SELECT name, job
FROM Person
ORDER BY name

20. Find the names of all person sorted in the descending order using age. 
P: What are the names of everybody sorted by age in descending order?

S:
S:
S:

SELECT name
FROM Person
ORDER BY age desc

21. Find the name and age of all males in order of their age.
P: What is the name and age of every male? Order the results by age. 


S:
S:
S:

SELECT name
FROM Person
WHERE gender = 'male'
ORDER BY age

22. Find the name and age of the person who is a friend of both Dan and Alice.
P: What are the names and ages of every person who is a friend of both Dan and Alice?

S:
S:
S:

SELECT T1.name, T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Dan'
INTERSECT
SELECT T1.name,  T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Alice'

23. Find the name and age of the person who is a friend of Dan or Alice.
P: What are the different names and ages of every friend of either Dan or alice?

S:
S:
S:

SELECT distinct T1.name, T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Dan' or T2.friend = 'Alice'

24. Find the name of the person who has friends with age above 40 and under age 30?
P: What are the names of every person who has a friend over 40 and under 30?

SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40)
INTERSECT
SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)

25. Find the name of the person who has friends with age above 40 but not under age 30?
P: What are the names of the people who are older 40 but no friends under age 30?


SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40)
EXCEPT
SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)

26. Find the name of the person who has no student friends.
P: What are the names of the people who have no friends who are students? 

select name
from person
EXCEPT
SELECT T2.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.job = 'student'

27. Find the person who has exactly one friend.
P: What are the names of everybody who has exactly one friend?

select name
from PersonFriend
group by name
having count(*) = 1

28. Who are the friends of Bob?
P: Who are Bob's friends?

SELECT T2.friend
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T1.name = 'Bob'

29. Find the name of persons who are friends with Bob.
P: What are the names of all of Bob's friends?

SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Bob'

30. Find the names of females who are friends with Zach
P: What are the names of all females who are friends with Zach?

SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Zach' and T1.gender = 'female'

31. Find the female friends of Alice.
P: What are all the friends of Alice who are female?

SELECT T2.friend
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T2.name = 'Alice' and T1.gender = 'female'

32. Find the male friend of Alice whose job is a doctor?
P: Who are the friends of Alice that are doctors?

SELECT T2.friend
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T2.name = 'Alice' and T1.gender = 'male' and T1.job = 'doctor'

33. Who has a friend that is from new york city?
P: What are the names of all friends who are from New York?

SELECT T2.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.city = 'new york city'

34. Who has friends that are younger than the average age?
P: What are the different names of friends who are younger than the average age for a friend?

SELECT distinct T2.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.age < (select avg(age) from person)

35. Who has friends that are older than the average age? Print their friends and their ages as well
P: Whare the names, friends, and ages of all people who are older than the average age of a person?

SELECT distinct T2.name, T2.friend, T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.age > (select avg(age) from person)

36. Who is the friend of Zach with longest year relationship?
P: Which friend of Zach has the longest-lasting friendship?

SELECT friend
FROM PersonFriend
WHERE name= 'Zach' and year = (select max(year) FROM PersonFriend WHERE name= 'Zach')

37. What is the age of the friend of Zach with longest year relationship?
P: What are the ages of all of Zach's friends who are in the longest relationship?

SELECT T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T2.name= 'Zach' and T2.year = (select max(year) FROM PersonFriend WHERE name= 'Zach')

38. Find the name of persons who are friends with Alice for the shortest years.
P: What are the names of all people who are friends with Alice for the shortest amount of time?

SELECT name
FROM PersonFriend
WHERE friend= 'Alice' and year = (select min(year) FROM PersonFriend WHERE friend= 'Alice')

39. Find the name, age, and job title of persons who are friends with Alice for the longest years.
P: What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?

SELECT T1.name, T1.age, T1.job
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend= 'Alice' and T2.year = (select max(year) FROM PersonFriend WHERE friend= 'Alice')

40. Who is the person that has no friend?
P: What are the names of all people who do not have friends?

select name
From person
Except
Select name
From PersonFriend

41. Which person whose friends have the oldest average age?
P: What is the name of the person who has the oldest average age for their friends, and what is that average age?

SELECT T2.name, avg(T1.age)
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
GROUP BY T2.name
ORDER BY avg(T1.age) DESC
LIMIT 1

42. What is the total number of people who has no friend living in the city of Austin.
P: What is the total number of people who have no friends living in Austin?

Select count(distinct name)
From PersonFriend
Where friend NOT IN (select name From person where city = 'Austin')

43. Find Alice's friends of friends.
P: What are the names of all of Alice's friends of friends?

SELECT distinct T4.name
FROM PersonFriend as T1 
     JOIN Person as T2 ON T1.name = T2.name
     JOIN PersonFriend T3 ON T1.friend = T3.name
     JOIN PersonFriend T4 ON T3.friend = T4.name
 WHERE T2.name = 'Alice' AND T4.name != 'Alice'
