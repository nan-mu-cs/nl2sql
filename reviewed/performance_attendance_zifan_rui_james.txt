Total = 15

1. How many performances are there?

SELECT count(*)
FROM performance

S:
S:
S:

2. List the hosts of performances in ascending order of attendance.

SELECT Host
FROM performance
order by Attendance ASC

S:
S:
S:

3. What are the dates and locations of performances?

SELECT Date, Location
FROM performance

S:
S:
S:

4. Show the attendances of the performances at location "TD Garden" or "Bell Centre"

SELECT Attendance
FROM performance
Where Location = "TD Garden" or Location = "Bell Centre"

S:
S:
S:

5. What is the average number of attendees for performances?

SELECT avg(Attendance)
FROM performance

S:
S:
S:

6. What is the date of the performance with the highest number of attendees?

SELECT Date
FROM performance
order by Attendance DESC limit 1

S:
S:
S:

7. Show different locations and the number of performances at each location.

SELECT Location, COUNT(*)
FROM performance
group by Location
 
S:
S:
S:

8. Show the most common location of performances.

SELECT Location
FROM performance
group by Location
order by COUNT(*) DESC limit 1

S:
S:
S:

9. Show the locations that have at least two performances.

SELECT Location
FROM performance
group by Location
Having COUNT(*) >= 2

S:
S:
S:

10. Show the locations that have both performances with more than 2000 attendees and performances with less than 1000 attendees.

SELECT Location
from performance
Where Attendance > 2000
Intersect 
SELECT Location
from performance
Where Attendance < 1000

S:
S:
S:

11. Show the names of members and the location of the performances they attended.

SELECT T2.Name, T3.Location
FROM member_attendance as T1 JOIN member as T2
on T1.Member_ID = T2.Member_ID join performance as T3
on T1.Performance_ID = T3.Performance_ID

S:
S:
S:

12. Show the names of members and the location of performances they attended in ascending alphabetical order of their names.

SELECT T2.Name, T3.Location
FROM member_attendance as T1 JOIN member as T2
on T1.Member_ID = T2.Member_ID join performance as T3
on T1.Performance_ID = T3.Performance_ID
order by T2.Name ASC

S:
S:
S:

13. Show the dates of performances with attending members whose roles are "Violin".

SELECT T3.Date
FROM member_attendance as T1 JOIN member as T2
on T1.Member_ID = T2.Member_ID join performance as T3
on T1.Performance_ID = T3.Performance_ID
Where T2.Role = "Violin"

S:
S:
S:

14. Show the names of members and the dates of performances they attended in descending order of attendance of the performances.

SELECT T2.Name, T3.Date
FROM member_attendance as T1 JOIN member as T2
on T1.Member_ID = T2.Member_ID join performance as T3
on T1.Performance_ID = T3.Performance_ID
order by T3.Attendance DESC

S:
S:
S:

15. List the names of members who did not attend any performance.

SELECT Name
from member
where Member_ID not in (SELECT Member_ID FROM member_attendance)

S:
S:
S:
