
Total # = 42

1. How many friends does Dan has?

SELECT count(T2.friend)
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T1.name = 'Dan'

How many females do this network has?

SELECT count(*)
FROM Person
WHERE gender = 'female'

What is the average age for all person?

SELECT avg(age)
FROM Person

How many different cities are they from?

SELECT count(distinct city)
FROM Person

How many type of jobs do they have?

SELECT count(distinct job)
FROM Person

Who is the oldest person?

SELECT name
FROM Person
WHERE age = (select max(age) from person)

Who is the oldest person whose job is student?

SELECT name
SELECT name
FROM Person
WHERE job = 'student' and age = (select max(age) from person WHERE job = 'student' )

Who is the youngest male?

SELECT name
FROM Person
WHERE gender = 'male' and age = (select min(age) from person WHERE gender = 'male' )

How old is the doctor named Zach?

SELECT age
FROM Person
WHERE job = 'doctor' and name = 'Zach'

Who is the person whose age is below 30?

SELECT name
FROM Person
WHERE age < 30

How many people whose age is greater 30 and job is engineer?

SELECT count(*)
FROM Person
WHERE age > 30 and job = 'engineer'

2. What is the average age for each gender?

SELECT avg(age), gender
FROM Person
GROUP BY gender

What is average age for different job title?

SELECT avg(age), job
FROM Person
GROUP BY job

What is average age of male for different job title?

SELECT avg(age), job
FROM Person
WHERE gender = 'male'
GROUP BY job

What is minimum age for different job title?

SELECT min(age), job
FROM Person
GROUP BY job

Find the number of people who is under 40 for each gender.

SELECT count(*), gender
FROM Person
WHERE age < 40
GROUP BY gender

Find the name of people whose age is greater than any engineer sorted by their age.

SELECT name
FROM Person
WHERE age > (select min(age) from person where job = 'engineer')
ORDER BY age

Find the number of people whose age is greater than all engineers.

SELECT count(*)
FROM Person
WHERE age > (select max(age) from person where job = 'engineer')

3. list the name, job title of all people ordered by their names.

SELECT name, job
FROM Person
ORDER BY name

Find the names of all person sorted in the descending order using age. 

SELECT name
FROM Person
ORDER BY age desc

Find the name and age of all males in alphabetic order of their age.

SELECT name
FROM Person
WHERE gender = 'male'
ORDER BY age

4. Find the name and age of the person who is a friend of both Dan and Alice.

SELECT T1.name, T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Dan'
INTERSECT
SELECT T1.name,  T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Alice'

Find the name and age of the person who is a friend of Zach or Alice.

SELECT distinct T1.name, T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Dan' or T2.friend = 'Alice'

Find the name of the person who has friends with age above 40 and under age 30?

SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40)
INTERSECT
SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)

Find the name of the person who has friends with age above 40 but not under age 30?

SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40)
EXCEPT
SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)

Find the name of the person who has no student friends.

select name
from person
EXCEPT
SELECT T2.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.job = 'student'

Find the person who has exactly one friend.

select name
from PersonFriend
group by name
having count(*) = 1

5. Who are the friends of Bob?

SELECT T2.friend
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T1.name = 'Bob'

Find the name of persons who are friends with Bob.

SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Bob'

Find the names of females who are friends with Zach

SELECT T1.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend = 'Zach' and T1.gender = 'female'

Find the female friends of Alice.

SELECT T2.friend
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T2.name = 'Alice' and T1.gender = 'female'

Find the male friend of Alice whose job is a doctor?

SELECT T2.friend
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T2.name = 'Alice' and T1.gender = 'male' and T1.job = 'doctor'

Who has a friend that is from new york city?

SELECT T2.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.city = 'new york city'

Who has friends that are younger than the average age?

SELECT distinct T2.name
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.age < (select avg(age) from person)

Who has friends that are older than the average age? Print their friends and their ages as well

SELECT distinct T2.name, T2.friend, T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T1.age > (select avg(age) from person)

Who is the friend of Zach with longest year relationship?

SELECT friend
FROM PersonFriend
WHERE name= 'Zach' and T2.year = (select max(year) FROM PersonFriend WHERE name= 'Zach')

What is the age of the friend of Zach with longest year relationship?

SELECT T1.age
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
WHERE T2.name= 'Zach' and T2.year = (select max(year) FROM PersonFriend WHERE name= 'Zach')

Find the name of persons who are friends with Alice for the shortest years.

SELECT name
FROM PersonFriend
WHERE friend= 'Alice' and year = (select min(year) FROM PersonFriend WHERE friend= 'Alice')

Find the name, age, and job title of persons who are friends with Alice for the longest years.

SELECT T1.name, T1.age, T1.job
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.name
WHERE T2.friend= 'Alice' and T2.year = (select max(year) FROM PersonFriend WHERE friend= 'Alice')

Who is the person that has no friend?

select name
From person
Except
Select name
From PersonFriend

Which person whose friends have the oldest average age?

SELECT T2.name, avg(T1.age)
FROM Person as T1 JOIN PersonFriend as T2 ON T1.name = T2.friend
GROUP BY T2.name
ORDER BY avg(T1.age) DESC
LIMIT 1

What is the total number of people who has no friend living in the city of Austin.

Select count(*)
From PersonFriend
Where friend NOT IN (select name From person where city = 'Austin')

6. Find Alice's friends of friends.

SELECT T4.name
FROM PersonFriend as T1 
     JOIN Person as T2 ON T1.name = T2.name
     JOIN PersonFriend T3 ON T1.friend = T3.name
     JOIN PersonFriend T4 ON T3.friend = T4.name
 WHERE T2.name = 'Alice' AND T4.name != 'Alice'
