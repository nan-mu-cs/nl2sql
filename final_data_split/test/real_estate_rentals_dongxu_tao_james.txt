# count 40

1. Which countries and cities are included in addresses?
P: What are the countries and cities for each address?

select country, town_city
from Addresses;


2. In which states are each of the the properties located?
P: Give the states or provinces corresponding to each property.

select distinct T1.county_state_province
from Addresses as T1 JOIN Properties as T2 on T1.address_id = T2.property_address_id;

3. How is the feature rooftop described?
P: Return the description of the feature 'rooftop'.

select feature_description
from Features 
where feature_name = 'rooftop';


4. What are the feature name and description of the most commonly seen feature across properties? 
P: Give the feature name and description for the most common feature across all properties.

select T1.feature_name, T1.feature_description
from Features as T1 JOIN Property_Features as T2 on T1.feature_id = T2.feature_id
group by T1.feature_name
order by count(*) desc limit 1;

5. What is the minimum number of rooms in a property?
P: What is the lowest room count across all the properties?

select min(room_count)
from Properties;

6. How many properties have 1 parking lot or 1 garage?
P: Count the number of properties that have 1 parking lot or 1 garage.

select count(*)
from Properties
where parking_lots = 1 or garage_yn = 1;

7. For users whose description contain the string 'Mother', which age categories are they in?
P: What are the age categories for users whose description contains the string Mother?

select T2.age_category_code
from Ref_User_Categories as T1 JOIN Users as T2 on T1.user_category_code = T2.user_category_code
where T1.User_category_description LIKE "%Mother";

8. What is the first name of the user who owns the greatest number of properties?
P: Return the first name of the user who owns the most properties.

select T1.first_name
from Users as T1 JOIN Properties as T2 on T2.owner_user_id = T1.User_id
group by T1.User_id
order by count(*) desc
limit 1;

9. List the average room count of the properties with gardens.
P: On average, how many rooms do properties with garden features have?

select avg(T3.room_count)
from Property_Features as T1 JOIN Features as T2 on T1.feature_id = T2.feature_id JOIN Properties as T3 on T1.property_id = T3.property_id
 where T2.feature_name = 'garden';

 10. In which cities are there any properties equipped with a swimming pool?
 P: Return the cities in which there exist properties that have swimming pools.

select T2.town_city
from Properties as T1 JOIN Addresses as T2 on T1.property_address_id = T2.address_id JOIN Property_Features as T3 on T1.property_id = T3.property_id JOIN Features as T4 on T4.feature_id = T3.feature_id
where T4.feature_name = 'swimming pool';

12. Which property had the lowest price requested by the vendor? List the id and the price.
P: What is the id of the property that had the lowest requested price from the vendor, and what was that price?

select property_id, vendor_requested_price
from Properties
order by vendor_requested_price limit 1;

13. On average, how many rooms does a property have?
P: What is the average number of rooms in a property?

select avg(room_count)
from Properties;

14. How many kinds of room sizes are listed?
P: Return the number of different room sizes.

select count(distinct room_size)
from Rooms;


15. What are the ids of users who have searched at least twice, and what did they search?
P: Return the ids of users who have performed two or more searches, as well as their search sequence.

select search_seq, user_id
from User_Searches
group by user_id
having count(*)>=2;

16. When was the time of the latest search by a user?
P: What was the time of the most recent search?

select max(search_datetime)
from User_Searches;

17. What are all the user searches time and content? Sort the result descending by content.
P: Return the search strings and corresonding time stamps for all user searches, sorted by search string descending.

select search_datetime, search_string
from User_Searches
order by search_string desc;

18. What are the zip codes of properties which do not belong to users who own at most 2 properties?
P: Return the zip codes for properties not belonging to users who own two or fewer properties.

select T1.zip_postcode
from Addresses as T1 JOIN Properties as T2 on T1.address_id = T2.property_address_id
where T2.owner_user_id NOT IN (
select owner_user_id
from Properties
group by owner_user_id
having count(*) <= 2
);

19. What are the users making only one search? List both category and user id.
P: What are the ids of users who have only made one search, and what are their category codes?

select T1.user_category_code, T1.user_id
from Users as T1 JOIN User_Searches as T2 on T1.user_id = T2.user_id
group by T1.user_id
having count(*) = 1;

20. What is the age range category of the user who made the first search?
P: Return the age category for the user who made the earliest search.

select T1.age_category_code
from Users as T1 JOIN User_Searches as T2 on T1.user_id = T2.user_id
order by T2.search_datetime
limit 1;

21. Find the login names of all senior citizen users ordered by their first names.
P: What are the login names of all senior citizens, sorted by first name?

select login_name
from Users
where user_category_code = 'Senior Citizen'
order by first_name

22. How many searches do buyers make in total?
P: Count the number of searches made by buyers.

select count(*)
from Users as T1 JOIN User_Searches as T2 on T1.user_id = T2.user_id
where T1.is_buyer = 1;

23. When did the user with login name ratione register?
P: What was the registration date for the user whose login name is ratione?

select date_registered
from Users
where login_name = 'ratione';

24. List the first name, middle name and last name, and log in name of all the seller users, whose seller value is 1.
P: What are the first, middle, last, and login names for all users who are sellers?

select first_name, middle_name, last_name, login_name
from Users
where is_seller = 1;

25. Where do the Senior Citizens live? List building, street, and the city.
P: What are the buildings, streets, and cities corresponding to the addresses of senior citizens?

select T1.line_1_number_building, T1.line_2_number_street, T1.town_city
from Addresses as T1 JOIN Users as T2 on T1.address_id = T2.user_address_id
where T2.user_category_code = 'Senior Citizen';

27.  How many properties are there with at least 2 features?
P: Count the number of properties with at least two features.

select count(*)
from Properties
group by property_id
having count(*) >=2;

31. How many photos does each property have?
P: Count the number of property photos each property has by id.

select count(*), property_id
from Property_Photos
group by property_id;

32. How many photos does each owner has of his or her properties? List user id and number of photos.
P: What are the user ids of property owners who have property photos, and how many do each of them have?

select T1.owner_user_id, count(*)
from Properties as T1 JOIN Property_Photos as T2 on T1.property_id = T2.property_id
group by T1.owner_user_id;

33. What is the total max price of the properties owned by single mothers or students?
P: Give the total max price corresponding to any properties owned by single mothers or students.

select sum(T1.price_max)
from Properties as T1 JOIN Users as T2 on T1.owner_user_id = T2.user_id
where T2.user_category_code = 'Single Mother' or T2.user_category_code = 'Student';

34. What are the date stamps and property names for each item of property history, ordered by date stamp?
P: Return the date stamp and property name for each property history event, sorted by date stamp. 

select T1.datestamp, T2.property_name
from User_Property_History as T1 JOIN Properties as T2 on T1.property_id = T2.property_id
order by datestamp;

35. What is the description of the most common property type? List the description and code.
P: What is the most common property type, and what is its description.

select T1.property_type_description, T1.property_type_code
from Ref_Property_Types as T1 JOIN Properties as T2 on T1.property_type_code = T2.property_type_code
group by T1.property_type_code
order by count(*) desc limit 1;

36. What is the detailed description of the age category code 'Over 60'?
P: Give the category description of the age category 'Over 60'.

select age_category_description
from Ref_Age_Categories
where age_category_code = 'Over 60';


37. What are the different room sizes, and how many of each are there?
P: Return the number of rooms with each different room size. 

select room_size, count(*)
from Rooms
group by room_size


38. In which country does the user with first name Robbie live? 
P: Return the country in which the user with first name Robbie lives.

select T1.country
from Addresses as T1 JOIN Users as T2 on T1.address_id = T2.user_address_id
where T2.first_name = 'Robbie';


39. What are the first, middle and last names of users who own the property they live in?
P: Return the full names of users who live in properties that they own.

select first_name, middle_name, last_name
from Properties as T1 JOIN Users as T2 on T1.owner_user_id = T2.user_id
Where T1.property_address_id = T2.user_address_id;

41. List the search content of the users who do not own a single property.
P: What search strings were entered by users who do not own any properties?

select search_string
from User_Searches
EXCEPT
select T1.search_string
from User_Searches as T1 JOIN Properties as T2 on T1.user_id = T2.owner_user_id;


42. List the last names and ids of users who have at least 2 properties and searched at most twice.
P: What are the last names and ids of users who have searched two or fewer times, and own two or more properties?

select T1.last_name, T1.user_id
from Users as T1 JOIN User_Searches as T2 on T1.user_id = T2.user_id
group by T1.user_id
having count(*) <= 2
INTERSECT
select T3.last_name, T3.user_id
from Users as T3 JOIN Properties as T4 on T3.user_id = T4.owner_user_id
group by T3.user_id
having count(*) >= 2;
