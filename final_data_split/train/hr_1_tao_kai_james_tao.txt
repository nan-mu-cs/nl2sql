Total # = 64

1. Display the first name and department name for each employee.
P: What are the first name and department name of all employees?

SELECT T1.first_name, T2.department_name
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id

S: What are the first names of all employees?
S: Also, what are their department names?

SELECT first_name
FROM employees

SELECT T1.first_name, T2.department_name
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id

2. List the full name (first and last name), and salary for those employees who earn below 6000.
P: What are the full names and salaries for any employees earning less than 6000?

SELECT first_name, last_name, salary
FROM employees
WHERE salary < 6000

S: Which employees earn less than 6000?
S: What are their full names and salaries?

SELECT *
FROM employees
WHERE salary < 6000

SELECT first_name, last_name, salary
FROM employees
WHERE salary < 6000

3. Display the first name, and department number for all employees whose last name is "McEwen".
P: What are the first names and department numbers for employees with last name McEwen?

SELECT first_name, department_id
FROM employees
WHERE last_name = 'McEwen'

S: List the first name and department id for all employees?
S: Of these, include the ones for employees with last name McEwen.

SELECT first_name, department_id
FROM employees

SELECT first_name, department_id
FROM employees
WHERE last_name = 'McEwen'

4. Return all the information for all employees without any department number.
P: What are all the employees without a department number?

SELECT *
FROM employees
WHERE department_id IS NULL

S: Return all the information for all employees.
S: Of those, which have no department number?

SELECT *
FROM employees

SELECT *
FROM employees
WHERE department_id IS NULL

5. Display all the information about the department Marketing.
P: What is all the information about the Marketing department?

SELECT *
FROM  departments
WHERE department_name = 'Marketing'

S: What is all the information about all the departments?
S: Of those, what is the information about the Marketing department?

SELECT *
FROM  departments

SELECT *
FROM  departments
WHERE department_name = 'Marketing'

6. when is the hire date for those employees whose first name does not containing the letter M?
P: On what dates were employees without the letter M in their first names hired?

SELECT hire_date
FROM employees
WHERE first_name NOT LIKE '%M%'

S: What is all the information on employees?
S: Of those, which do not have the letter M in their first names?
S: What were their hire dates?

SELECT *
FROM employees

SELECT *
FROM employees
WHERE first_name NOT LIKE '%M%'

SELECT hire_date
FROM employees
WHERE first_name NOT LIKE '%M%'

7. display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.
P: What are the full name, hire date, salary, and department id for employees without the letter M in their first name?

SELECT first_name, last_name, hire_date, salary, department_id
FROM employees
WHERE first_name NOT LIKE '%M%'

S: What is all the information on employees?
S: Of those, which do not have the letter M in their first names?
S: What were their full names, hire dates, salaries, and department numbers?

SELECT *
FROM employees

SELECT *
FROM employees
WHERE first_name NOT LIKE '%M%'

SELECT first_name, last_name, hire_date, salary, department_id
FROM employees
WHERE first_name NOT LIKE '%M%'

8. display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.
P: What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?

SELECT first_name, last_name, hire_date, salary, department_id
FROM employees
WHERE first_name NOT LIKE '%M%'
ORDER BY department_id

S: Which employees do not have the letter M in their first names?
S: What were their full names, hire dates, salaries, and department numbers?
S: Order these by ascending department number.

SELECT *
FROM employees
WHERE first_name NOT LIKE '%M%'

SELECT first_name, last_name, hire_date, salary, department_id
FROM employees
WHERE first_name NOT LIKE '%M%'

SELECT first_name, last_name, hire_date, salary, department_id
FROM employees
WHERE first_name NOT LIKE '%M%'
ORDER BY department_id

9. what is the phone number of employees whose salary is in the range of 8000 and 12000?
P: Return the phone numbers of employees with salaries between 8000 and 12000.

SELECT phone_number
FROM employees
WHERE salary BETWEEN 8000 AND 12000

S: What are all the employees' phone numbers?
S: Return only those for employees with salaries between 8000 and 12000.

SELECT phone_number
FROM employees

SELECT phone_number
FROM employees
WHERE salary BETWEEN 8000 AND 12000

10. display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40.
P: Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40.

SELECT *
FROM employees
WHERE salary BETWEEN 8000 AND 12000
AND commission_pct IS NOT NULL
OR  department_id != 40

S: Who are all the employees with salaries between 8000 and 12000?
S: Of those, who has a commission that is not null or department id which is not equal to 40?

SELECT *
FROM employees
WHERE salary BETWEEN 8000 AND 12000

SELECT *
FROM employees
WHERE salary BETWEEN 8000 AND 12000
AND commission_pct IS NOT NULL
OR  department_id != 40

11. What are the full name (first and last name) and salary for all employees who does not have any value for commission?
P: Return the full names and salaries of employees with null commissions.

SELECT first_name, last_name, salary
FROM  employees
WHERE commission_pct IS NULL

S: What are the full names and salaries of all employees?
S: Of those, which have null comissions?

SELECT first_name, last_name, salary
FROM  employees

SELECT first_name, last_name, salary
FROM  employees
WHERE commission_pct IS NULL

12. Display the first and last name, and salary for those employees whose first name is ending with the letter m.
P: Return the full names and salaries for employees with first names that end with the letter m.

SELECT first_name, last_name, salary
FROM employees
WHERE first_name LIKE '%m'

S: What are all the employees with first names that end with m?
S: What are their full names and salaries?

SELECT *
FROM employees
WHERE first_name LIKE '%m'

SELECT first_name, last_name, salary
FROM employees
WHERE first_name LIKE '%m'

13. Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.
P: What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?

SELECT job_id, hire_date
FROM employees
WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'

S: Which employees were hired between November 5th, 2007 and July 5th, 2009?
S: What are their job ids and hire dates?

SELECT *
FROM employees
WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'

SELECT job_id, hire_date
FROM employees
WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'

14. What are the first and last name for those employees who works either in department 70 or 90?
P: What are the full names of employees who with in department 70 or 90?

SELECT first_name, last_name
FROM employees
WHERE department_id = 70 OR department_id = 90

S: What are the names of all employees?
S: Of those, who are in department 70 or 90?

SELECT first_name, last_name
FROM employees

SELECT first_name, last_name
FROM employees
WHERE department_id = 70 OR department_id = 90

15. Find the salary and manager number for those employees who is working under a manager.
P: What are the salaries and manager ids for employees who have managers?

SELECT salary, manager_id
FROM employees
WHERE manager_id IS NOT NULL

S: Who are the employees who are working under a manager?
S: What are their salaries and manager numbers?

SELECT *
FROM employees
WHERE manager_id IS NOT NULL

SELECT salary, manager_id
FROM employees
WHERE manager_id IS NOT NULL

16. display all the details from Employees table for those employees who was hired before 2002-06-21.
P: What is all the information about employees hired before June 21, 2002?

SELECT *
FROM employees
WHERE hire_date < '2002-06-21'

S: What is all the information about employees?
S: Of those, which were hired before 2002-06-21?

SELECT *
FROM employees

SELECT *
FROM employees
WHERE hire_date < '2002-06-21'

17. display all the information for all employees who have the letters D or S in their first name and also arrange the result in descending order by salary.
P: What is all the information about employees with D or S in their first name, ordered by salary descending?

SELECT *
FROM employees
WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
ORDER BY salary DESC

S: What is all the information about employees with a D or S in their first name?
S: Order those by decreasing salary.

SELECT *
FROM employees
WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'

SELECT *
FROM employees
WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
ORDER BY salary DESC

18. display those employees who joined after 7th September, 1987.
P: Which employees were hired after September 7th, 1987?

SELECT *
FROM employees
WHERE hire_date > '1987-09-07'

S: What is all the information about the employees?
S: Of those, who was hired after September 7th, 1987?

SELECT *
FROM employees

SELECT *
FROM employees
WHERE hire_date > '1987-09-07'

19. display the job title of jobs which minimum salary is greater than 9000.
P: Which job titles correspond to jobs with salaries over 9000?

SELECT job_title
FROM jobs
WHERE min_salary > 9000

S: What are all the job titles?
S: Of those, which correspond to jobs with salaries over 9000?

SELECT job_title
FROM jobs

SELECT job_title
FROM jobs
WHERE min_salary > 9000

20. display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.
P: What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?

SELECT job_title, max_salary - min_salary
FROM jobs
WHERE max_salary BETWEEN 12000 AND 18000

S: What is all the information about jobs with max salary between 12000 and 18000?
S: What are the job titles and differences between max and min salaries for those jobs?

SELECT *
FROM jobs
WHERE max_salary BETWEEN 12000 AND 18000

SELECT job_title, max_salary - min_salary
FROM jobs
WHERE max_salary BETWEEN 12000 AND 18000

21. display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.
P: What are the emails of employees with null commission, salary between 7000 and 12000, and who work in department 50?

SELECT email
FROM employees
WHERE commission_pct IS NULL
AND salary BETWEEN 7000 AND 12000
AND department_id=50

S: What are the emails of employees who have no commission percentage?
S: Of those, which have salaries between 7000 and 12000?
S: Of those, which work in the department with id number 50?

SELECT email
FROM employees
WHERE commission_pct IS NULL

SELECT email
FROM employees
WHERE commission_pct IS NULL
AND salary BETWEEN 7000 AND 12000

SELECT email
FROM employees
WHERE commission_pct IS NULL
AND salary BETWEEN 7000 AND 12000
AND department_id=50

22. display the employee ID for each employee and the date on which he ended his previous job.
P: What are the employee ids for each employee and final dates of employment at their last job?

SELECT employee_id, MAX(end_date)
FROM job_history
GROUP BY employee_id

S: What is all the job history information?
S: What are the unique employee ids?
S: What are the latest end dates corresponding to each one?

SELECT *
FROM job_history

SELECT employee_id
FROM job_history
GROUP BY employee_id

SELECT employee_id, MAX(end_date)
FROM job_history
GROUP BY employee_id

23. display those departments where more than ten employees work who got a commission percentage.
P: What are the department ids for which more than 10 employees had a commission?

SELECT department_id
FROM employees
GROUP BY department_id
HAVING COUNT(commission_pct)>10

S: What are the different department ids?
S: Of these, which had more than 10 employees with commissions?

SELECT department_id
FROM employees
GROUP BY department_id

SELECT department_id
FROM employees
GROUP BY department_id
HAVING COUNT(commission_pct)>10

24. Find the ids of the departments where any manager is managing 4 or more employees.
P: What are department ids for departments with managers managing more than 3 employees?

SELECT DISTINCT department_id
FROM employees
GROUP BY department_id, manager_id
HAVING COUNT(employee_id) >=4

S: What are the manager ids of managers who manage 4 or more employees?
S: What are their department ids?

SELECT manager_id
FROM employees
GROUP BY manager_id
HAVING COUNT(employee_id) >=4

SELECT DISTINCT department_id
FROM employees
GROUP BY department_id, manager_id
HAVING COUNT(employee_id) >=4

25. display the average salary of employees for each department who gets a commission percentage.
P: What is the average salary of employees who have a commission percentage that is not null?

SELECT department_id, AVG(salary)
FROM employees
WHERE commission_pct IS NOT NULL
GROUP BY department_id

S: What is the average salary for employees, by department id?
S: What is this if employees without commission percentages are excluded?

SELECT department_id, AVG(salary)
FROM employees
WHERE commission_pct IS NOT NULL
GROUP BY department_id

SELECT department_id, AVG(salary)
FROM employees
WHERE commission_pct IS NOT NULL
GROUP BY department_id

26. display the country ID and number of cities for each country.
P: Give the country id and corresponding count of cities in each country.

SELECT country_id, COUNT(*)
FROM locations
GROUP BY country_id

S: How many cities are there?
S: Count the cities by their country ids.

SELECT COUNT(*)
FROM locations

SELECT country_id, COUNT(*)
FROM locations
GROUP BY country_id

27. display job ID for those jobs that were done by two or more for more than 300 days.
P: What are the job ids for jobs done more than once for a period of more than 300 days?

SELECT job_id
FROM job_history
WHERE end_date - start_date >300
GROUP BY job_id
HAVING COUNT(*)>=2

S: What are job ids for jobs that lasted more than 300 days?
S: Of these, which have been done more than once?

SELECT job_id
FROM job_history
WHERE end_date - start_date >300

SELECT job_id
FROM job_history
WHERE end_date - start_date >300
GROUP BY job_id
HAVING COUNT(*)>=2

28. display the ID for those employees who did two or more jobs in the past.
P: What are the employee ids for employees who have held two or more jobs?

SELECT employee_id
FROM job_history
GROUP BY employee_id
HAVING COUNT(*) >=2

S: What are all the different employee ids in the job history table?
S: Of these, which have had two or more jobs?

SELECT employee_id
FROM job_history

SELECT employee_id
FROM job_history
GROUP BY employee_id
HAVING COUNT(*) >=2

29. Find employee with ID and name of the country presently where (s)he is working.
P: What are all the employee ids and the names of the countries in which they work?

SELECT T1.employee_id, T4.country_name
FROM employees as T1
             JOIN departments as T2 ON T1.department_id = T2.department_id
             JOIN locations as T3 ON T2.location_id = T3.location_id
             JOIN countries as T4 ON T3.country_id = T4.country_id

S: What are all the employee ids?
S: Also, what are the names of the countries that they work in?

SELECT employee_id
FROM employees

SELECT employee_id, country_name
FROM employees as T1
             JOIN departments as T2 ON T1.department_id = T2.department_id
             JOIN locations as T3 ON T2.location_id = T3.location_id
             JOIN countries as T4 ON T3.country_id = T4.country_id

30. display the department name and number of employees in each of the department.
P: Give the name of each department and the number of employees in each.

SELECT T2.department_name, COUNT(*)
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id
GROUP BY T2.department_name

S: How many employees are there?
S: Group these counts by department name.

SELECT COUNT(*)
FROM employees

SELECT T2.department_name, COUNT(*)
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id
GROUP BY T2.department_name

31. Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000?
P: What is all the job history info done by employees earning a salary greater than or equal to 12000?

 SELECT *
 FROM  job_history as T1 JOIN employees as T2 ON T1.employee_id = T2.employee_id
 WHERE T2.salary >= 12000

 S: What is all the job history information?
 S: What is all the job history information for employees making over 12000?

 SELECT *
 FROM  job_history

 SELECT *
 FROM  job_history as T1 JOIN employees as T2 ON T1.employee_id = T2.employee_id
 WHERE T2.salary >= 12000

32. display job title and average salary of employees.
P: What is the average salary for each job title?

SELECT job_title, AVG(salary)
FROM employees as T1 JOIN jobs as T2 on T1.job_id = T2.job_id
GROUP BY T2.job_title

S: What is the average salary for all employees?
S: What are the average salaries by job title?

SELECT AVG(salary)
FROM employees

SELECT job_title, AVG(salary)
FROM employees as T1 JOIN jobs as T2 on T1.job_id = T2.job_id
GROUP BY T2.job_title

33. What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?
P: Provide the full names of employees earning more than the employee with id 163.

 SELECT first_name, last_name
 FROM employees
 WHERE salary >
 (SELECT salary
 FROM employees
 WHERE employee_id=163
 )

S: What is the salary of employee with id 163?
S: What is all employee information for employees making more than employee 163?
S: What are the full names of these employees?

 SELECT salary
 FROM employees
 WHERE employee_id=163


 SELECT *
 FROM employees
 WHERE salary >
 (SELECT salary
 FROM employees
 WHERE employee_id=163
 )

 SELECT first_name, last_name
 FROM employees
 WHERE salary >
 (SELECT salary
 FROM employees
 WHERE employee_id=163
 )

34. return the smallest salary for every departments.
P: What is the minimum salary in each department?

SELECT MIN(salary), department_id
FROM employees
GROUP BY department_id

S: What is the lowest salary across all employees?
S: What are these numbers by department id?

SELECT MIN(salary)
FROM employees

SELECT MIN(salary), department_id
FROM employees
GROUP BY department_id

35. Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.
P: What are the full names and department ids for the lowest paid employees across all departments.

SELECT first_name, last_name, department_id
FROM employees
WHERE salary IN
(SELECT MIN(salary)
FROM employees
GROUP BY department_id)

S: What is the lowest salary across all departments?
S: What information is available for employees who make that much?
S: What are their first and last names and department ids?

SELECT MIN(salary)
FROM employees
GROUP BY department_id

SELECT *
FROM employees
WHERE salary IN
(SELECT MIN(salary)
FROM employees
GROUP BY department_id)

SELECT first_name, last_name, department_id
FROM employees
WHERE salary IN
(SELECT MIN(salary)
FROM employees
GROUP BY department_id)

36. Find the employee id for all employees who earn more than the average salary.
P: What are the employee ids for employees who make more than the average?

 SELECT employee_id
 FROM employees
 WHERE salary >
 (SELECT AVG(salary)
 FROM employees)

 S: What is the average salary across all employees?
 S: Which employees make more than that?
 S: What are their ids?

 SELECT AVG(salary)
 FROM employees

 SELECT *
 FROM employees
 WHERE salary >
 (SELECT AVG(salary)
 FROM employees)

 SELECT employee_id
 FROM employees
 WHERE salary >
 (SELECT AVG(salary)
 FROM employees)

37. display the employee id and salary of all employees who report to Payam (first name).
P: What are the employee ids of employees who report to Payam, and what are their salaries?

SELECT employee_id, salary
 FROM employees
 WHERE manager_id =
 (SELECT employee_id
 FROM employees
 WHERE first_name = 'Payam'
 )

 S: What are the id for the employee whose first name is Payam?
 S: Which employees' manager is him?
 S: What are their ids and salaries?

 SELECT employee_id
 FROM employees
 WHERE first_name = 'Payam'

SELECT *
 FROM employees
 WHERE manager_id =
 (SELECT employee_id
 FROM employees
 WHERE first_name = 'Payam'
 )

 SELECT employee_id, salary
 FROM employees
 WHERE manager_id =
 (SELECT employee_id
 FROM employees
 WHERE first_name = 'Payam'
 )

38. find the name of all departments that do actually have one or more employees assigned to them.
P: What are the names of departments that have at least one employee.

 SELECT DISTINCT T2.department_name
 FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id

S: Find the name of all departments.
S: What about those that have at least one employee.

SELECT DISTINCT department_name
FROM departments

SELECT DISTINCT department_name
FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id

39. get the details of employees who manage a department.
P: What is all the information regarding employees who are managers?

SELECT DISTINCT *
FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id
WHERE T1.employee_id = T2.manager_id

S: What are all the manager ids of the different departments?
S: What is all the employee information regarding these managers?

SELECT manager_id
FROM departments

SELECT DISTINCT *
FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id
WHERE T1.employee_id = T2.manager_id

40. display all the information about the department Marketing.
P: What is all the information about the Marketing department?

SELECT *
FROM  departments
WHERE department_name = 'Marketing'

 S: What is all the information about all the departments?
 S: Of these, what information pertains to the Marketing department?

 SELECT *
 FROM  departments

 SELECT *
 FROM  departments
 WHERE department_name = 'Marketing'

41. display the ID for those employees who did two or more jobs in the past.
P: What are the employee ids for those who had two or more jobs.

 SELECT employee_id
 FROM job_history
 GROUP BY employee_id
 HAVING COUNT(*) >=2

 S: What are the ids of employees who have job history available?
 S: Which of them have held two or more jobs?

 SELECT employee_id
 FROM job_history

 SELECT employee_id
 FROM job_history
 GROUP BY employee_id
 HAVING COUNT(*) >=2

42. What are the unique ids of those departments where any manager is managing 4 or more employees.
P: Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?

 SELECT DISTINCT department_id
 FROM employees
 GROUP BY department_id, manager_id
 HAVING COUNT(employee_id) >=4

 S: What are the manager ids for managers who are in charge of 4 or more employees?
 S: What are the distinct department ids for the departments they belong to?

 SELECT manager_id
 FROM employees
 GROUP BY manager_id
 HAVING COUNT(employee_id) >=4

 SELECT DISTINCT department_id
 FROM employees
 GROUP BY department_id, manager_id
 HAVING COUNT(employee_id) >=4

43. Find the job ID for those jobs which average salary is above 8000.
P: What are the job ids corresponding to jobs with average salary above 8000?

 SELECT job_id
 FROM employees
 GROUP BY job_id
 HAVING AVG(salary)>8000

 S: What is the average salary for each job?
 S: What are the job ids for jobs that average more than 8000?

 SELECT avg(salary)
 FROM employees
 GROUP BY job_id

 SELECT job_id
 FROM employees
 GROUP BY job_id
 HAVING AVG(salary)>8000

44. display the employee ID and job name for all those jobs in department 80.
P: what are the employee ids and job titles for employees in department 80?

 SELECT T1.employee_id, T2. job_title
 FROM employees as T1 JOIN jobs as T2 on T1.job_id = T2.job_id
 WHERE T1.department_id=80

 S: What are the employee ids for employees in department 80?
 S: Also, what are their job titles?

 SELECT employee_id
 FROM employees
 WHERE department_id=80

 SELECT T1.employee_id, T2. job_title
 FROM employees as T1 JOIN jobs as T2 on T1.job_id = T2.job_id
 WHERE T1.department_id=80

45. What is the first name and job id for all employees in the Finance department?
P: Give the first name and job id for all employees in the Finance department.

SELECT T1.first_name, T1.job_id
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id
WHERE T2.department_name = 'Finance'

S: Who are the employees working in the Finance department?
S: What are their first names and job ids?

SELECT *
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id
WHERE T2.department_name = 'Finance'

SELECT T1.first_name, T1.job_id
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id
WHERE T2.department_name = 'Finance'

46. display all the information of the employees whose salary if within the range of smallest salary and 2500.
P: What is all the information regarding employees with salaries above the minimum and under 2500?

SELECT *
FROM employees
WHERE salary BETWEEN
(SELECT MIN(salary)
FROM employees) AND 2500

S: What is the lowest salary across all employees?
S: Which employees make more than that?
S: Of those, which make less than 2500?

SELECT MIN(salary)
FROM employees

SELECT *
FROM employees
WHERE salary >
(SELECT MIN(salary)
FROM employees)

SELECT *
FROM employees
WHERE salary BETWEEN
(SELECT MIN(salary)
FROM employees) AND 2500

47. Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.
P: What are the ids for employees who do not work in departments with managers that have ids between 100 and 200?

SELECT *
FROM employees
WHERE department_id NOT IN
(SELECT department_id
FROM departments
WHERE manager_id BETWEEN 100 AND 200)

S: What are the department ids with managers who have ids between 100 and 200?
S: What is all the information about employees who do not work in those departments?

SELECT department_id
FROM departments
WHERE manager_id BETWEEN 100 AND 200

SELECT *
FROM employees
WHERE department_id NOT IN
(SELECT department_id
FROM departments
WHERE manager_id BETWEEN 100 AND 200)

48. display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.
P: What are the full names and hire dates for employees in the same department as someone with the first name Clara?

SELECT first_name, last_name, hire_date
FROM employees
WHERE department_id =
(SELECT department_id
FROM employees
WHERE first_name = "Clara")

S: What are the department ids for departments that have someone with the first name Clara?
S: What is all the information about employees in those departments?
S: What are the full names and hire dates of those employees?

SELECT department_id
FROM employees
WHERE first_name = "Clara"

SELECT *
FROM employees
WHERE department_id =
(SELECT department_id
FROM employees
WHERE first_name = "Clara")

SELECT first_name, last_name, hire_date
FROM employees
WHERE department_id =
(SELECT department_id
FROM employees
WHERE first_name = "Clara")

49. display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.
P: What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?

SELECT first_name, last_name, hire_date
FROM employees
WHERE department_id =
( SELECT department_id
FROM employees
WHERE first_name = "Clara")
AND first_name != "Clara"

S: What are the department ids for departments that have someone with the first name Clara?
S: What is all the information about employees in those departments?
S: What are the full names and hire dates of those employees?
S: Of those, who does not have the first name Clara?

SELECT department_id
FROM employees
WHERE first_name = "Clara"

SELECT *
FROM employees
WHERE department_id =
( SELECT department_id
FROM employees
WHERE first_name = "Clara")

SELECT first_name, last_name, hire_date
FROM employees
WHERE department_id =
( SELECT department_id
FROM employees
WHERE first_name = "Clara")

SELECT first_name, last_name, hire_date
FROM employees
WHERE department_id =
( SELECT department_id
FROM employees
WHERE first_name = "Clara")
AND first_name != "Clara"

50. display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a ’T’.
P: What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?

SELECT employee_id, first_name, last_name
FROM employees
WHERE department_id IN
( SELECT department_id
FROM employees
WHERE first_name LIKE '%T%' )

S: What are the department ids for departments with employees who have the letter T in their first name?
S: Who are the employees in those departments?
S: What are their ids and full names?

SELECT department_id
FROM employees
WHERE first_name LIKE '%T%'

SELECT *
FROM employees
WHERE department_id IN
( SELECT department_id
FROM employees
WHERE first_name LIKE '%T%' )

SELECT employee_id, first_name, last_name
FROM employees
WHERE department_id IN
( SELECT department_id
FROM employees
WHERE first_name LIKE '%T%' )

51. display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.
P: What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?

SELECT employee_id, first_name, last_name, salary
FROM employees
WHERE salary >
( SELECT AVG (salary)
FROM employees )
AND department_id IN
( SELECT department_id
FROM employees
WHERE first_name LIKE '%J%')

S: What is the average salary across all employees?
S: Which employees make more than that?
S: Of those, which work in departments with employees who have the letter J in their first name?
S: What are their ids, full names and salaries?

SELECT AVG (salary)
FROM employees

SELECT *
FROM employees
WHERE salary >
( SELECT AVG (salary)
FROM employees )

SELECT *
FROM employees
WHERE salary >
( SELECT AVG (salary)
FROM employees )
AND department_id IN
( SELECT department_id
FROM employees
WHERE first_name LIKE '%J%')

SELECT employee_id, first_name, last_name, salary
FROM employees
WHERE salary >
( SELECT AVG (salary)
FROM employees )
AND department_id IN
( SELECT department_id
FROM employees
WHERE first_name LIKE '%J%')

52. display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.
P: What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?

SELECT employee_id, job_id
FROM employees
WHERE salary <
( SELECT min(salary)
FROM employees
WHERE job_id = 'MK_MAN' )

S: What is the lowest salary for someone with the title MK_MAN?
S: Which employees make less than that?
S: What are their employee ids and job ids?

SELECT min(salary)
FROM employees
WHERE job_id = 'MK_MAN'

SELECT *
FROM employees
WHERE salary <
( SELECT min(salary)
FROM employees
WHERE job_id = 'MK_MAN' )

SELECT employee_id, job_id
FROM employees
WHERE salary <
( SELECT min(salary)
FROM employees
WHERE job_id = 'MK_MAN' )


53. display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.
P: What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?

SELECT employee_id, first_name, last_name, job_id
FROM employees
WHERE salary >
( SELECT max(salary)
FROM employees
WHERE job_id = 'PU_MAN' )

S: What is the highest salary for someone with the title PU_MAN?
S: Which employees make more than that?
S: What are their employee ids, full names, and job ids?

SELECT max(salary)
FROM employees
WHERE job_id = 'PU_MAN'

SELECT *
FROM employees
WHERE salary >
( SELECT max(salary)
FROM employees
WHERE job_id = 'PU_MAN' )

SELECT employee_id, first_name, last_name, job_id
FROM employees
WHERE salary >
( SELECT max(salary)
FROM employees
WHERE job_id = 'PU_MAN' )

54. display the department id and the total salary for those departments which contains at least two employees.
P: What are total salaries and department id for each department that has more than 2 employees?

SELECT department_id, SUM(salary)
FROM employees
GROUP BY department_id
HAVING count(*) >= 2

S: What are the department ids for departments which have more than 2 employees?
S: What is the sum of the salaries within each of those departments?

SELECT department_id
FROM employees
GROUP BY department_id
HAVING count(*) >= 2

SELECT department_id, SUM(salary)
FROM employees
GROUP BY department_id
HAVING count(*) >= 2

55. display all the information of those employees who did not have any job in the past.
P: What is all the information about employees who have never had a job in the past?

SELECT *
FROM employees
WHERE employee_id NOT IN
(SELECT employee_id
FROM job_history)

S: What are all the employee ids for employees who have had a job in the past?
S: What is all the information for employees who are not a part of those?

SELECT employee_id
FROM job_history
group by employee_id

SELECT *
FROM employees
WHERE employee_id NOT IN
(SELECT employee_id
FROM job_history)

56. display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.
P: What are the department ids, full names, and salaries for employees who make the most in their departments?

SELECT first_name,  last_name,  salary, department_id
FROM employees
GROUP BY department_id
HAVING salary = MAX(salary)

S: What is the max salary in each department?
S: What are the first name, last name, salary and department id for employees who make the most in their departments?

SELECT MAX(salary)
FROM employees
GROUP BY department_id

SELECT first_name,  last_name,  salary, department_id
FROM employees
GROUP BY department_id
HAVING salary = MAX(salary)

57. display the first and last name, department, city, and state province for each employee.
P: What are the full names, departments, cities, and state provinces for each employee?

SELECT T1.first_name, T1.last_name, T2.department_name, T3.city, T3.state_province
FROM employees as T1
JOIN departments as T2 ON T1.department_id = T2.department_id
JOIN locations as T3 ON T2.location_id = T3.location_id

S: What are the first and last names for each employee?
S: Also, what are their department names?
S: Also, what are their city and state provinces?

SELECT first_name, last_name
FROM employees

SELECT T1.first_name, T1.last_name, T2.department_name
FROM employees as T1
JOIN departments as T2 ON T1.department_id = T2.department_id

SELECT T1.first_name, T1.last_name, T2.department_name, T3.city, T3.state_province
FROM employees as T1
JOIN departments as T2 ON T1.department_id = T2.department_id
JOIN locations as T3 ON T2.location_id = T3.location_id

58. display those employees who contain a letter z to their first name and also display their last name, city.
P: What are the full names and cities of employees who have the letter Z in their first names?

SELECT T1.first_name, T1.last_name, T3.city
FROM employees as T1
JOIN departments as T2 ON T1.department_id = T2.department_id
JOIN locations as T3 ON T2.location_id = T3.location_id
WHERE T1.first_name LIKE '%z%'

S: What are the full names of each employee?
S: Also, what cities are their departments in?
S: Of these, which have the letter Z in their first name?

SELECT first_name, last_name
FROM employees

SELECT T1.first_name, T1.last_name, T3.city
FROM employees as T1
JOIN departments as T2 ON T1.department_id = T2.department_id
JOIN locations as T3 ON T2.location_id = T3.location_id

SELECT T1.first_name, T1.last_name, T3.city
FROM employees as T1
JOIN departments as T2 ON T1.department_id = T2.department_id
JOIN locations as T3 ON T2.location_id = T3.location_id
WHERE T1.first_name LIKE '%z%'

59. display the department name, city, and state province for each department.
P: What are the department names, cities, and state provinces for each department?

SELECT T1.department_name, T2.city, T2.state_province
FROM departments as T1 JOIN locations as T2 ON T2.location_id = T1.location_id

S: What are the names of each department?
S: Also, in what city and state province are they in?

SELECT department_name
FROM departments

SELECT T1.department_name, T2.city, T2.state_province
FROM departments as T1 JOIN locations as T2 ON T2.location_id = T1.location_id

60. display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.
P: What the full names, ids of each employee and the name of the country they are in?

SELECT T1.first_name, T1.last_name,T1.employee_id, T4.country_name
FROM employees as T1
           JOIN departments as T2 ON T1.department_id = T2.department_id
           JOIN locations as T3 ON T2.location_id = T3.location_id
           JOIN countries as T4 ON T3.country_id = T4.country_id

S: What are the full names and ids for all employees?
S: Also, what are the names of the countries that they work in?

SELECT first_name, last_name, employee_id
FROM employees

SELECT T1.first_name, T1.last_name,T1.employee_id, T4.country_name
FROM employees as T1
           JOIN departments as T2 ON T1.department_id = T2.department_id
           JOIN locations as T3 ON T2.location_id = T3.location_id
           JOIN countries as T4 ON T3.country_id = T4.country_id

61. display the department name and number of employees in each of the department.
P: What are the department names and how many employees work in each of them?

SELECT department_name, COUNT(*)
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id
GROUP BY department_name

S: What are the different department names?
S: How many employees work in each one?

SELECT department_name
FROM departments

SELECT department_name, COUNT(*)
FROM employees as T1 JOIN departments as T2 ON T1.department_id = T2.department_id
GROUP BY department_name

62. display the full name (first and last name), and salary of those employees who working in any department located in London.
P: What are full names and salaries of employees working in the city of London?

SELECT first_name, last_name, salary
FROM employees as T1
	   JOIN departments as T2 ON T1.department_id = T2.department_id
	   JOIN  locations as T3 ON T2.location_id = T3.location_id
WHERE  T3.city = 'London'

S: Who are all the employees working in the city of London?
S: What are their full names and salaries?

SELECT *
FROM employees as T1
	   JOIN departments as T2 ON T1.department_id = T2.department_id
	   JOIN  locations as T3 ON T2.location_id = T3.location_id
WHERE  T3.city = 'London'

SELECT first_name, last_name, salary
FROM employees as T1
	   JOIN departments as T2 ON T1.department_id = T2.department_id
	   JOIN  locations as T3 ON T2.location_id = T3.location_id
WHERE  T3.city = 'London'
